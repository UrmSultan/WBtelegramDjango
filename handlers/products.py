from aiogram import Router
from aiogram.filters import callback_data
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery

import database
from keyboards.reply import auth_keyboard
from utils.wildberries import get_wb_products

router = Router()

user_products = {}

@router.message(lambda message: message.text == "üì¶ –í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä")
async def choose_product(message: Message):
    user_id = message.from_user.id
    wb_token = database.get_user_token(user_id)

    if not wb_token:
        await message.answer(
            "‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã! –ù–∞–∂–º–∏—Ç–µ 'üîë –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è'",
            reply_markup=auth_keyboard()
        )
        return

    products = await get_wb_products(wb_token)

    if not products:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ Wildberries.")
        return

    user_products[user_id] = products

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text=product.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"),
                callback_data=f"product_{product['nmID']}"
            )]
            for product in products[:10]
        ]
    )
    await message.answer("üì¶ –í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã:", reply_markup=keyboard)

@router.callback_query(lambda call: call.data.startswith("product_"))
async def callback_product(call:CallbackQuery):
    user_id = call.from_user.id
    nm_id = call.data.removeprefix("product_")

    products = user_products.get(user_id,[])
    products = next((p for p in products if str(p["nmID"]) == nm_id), None)

    if not products:
        await call.message.answer("‚ùå –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –≤ –∫—ç—à–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        await call.answer()
        return

    sizes = products.get("sizes",[])
    if not sizes:
        await call.message.answer("‚ùå –î–ª—è —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤.")
        await call.answer()
        return

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=size.get("techSize", "NoSize"),
                    callback_data=f"size_{nm_id}_{size['chrtID']}_{size['skus'][0]}"
                )
            ]
            for size in sizes if size.get("skus")
        ]
    )
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä:", reply_markup=keyboard)
    await call.answer()