from aiogram import Router
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery


import database
from handlers.navigation import generate_products_keyboard
from keyboards.reply import auth_keyboard
from api.products import get_wb_products
from handlers.storage import user_products, user_page

router = Router()


@router.message(lambda message: message.text == "üì¶ –í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä")
async def choose_product(message: Message):
    user_id = message.from_user.id

    wb_token = database.get_user_token(user_id)
    if not wb_token:
        await message.answer(
            "‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã! –ù–∞–∂–º–∏—Ç–µ 'üîë –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è'",
            reply_markup=auth_keyboard()
        )
        return

    products = await get_wb_products(wb_token)

    print(f"DEBUG: –ü–æ–ª—É—á–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤")

    if not products:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ Wildberries.")
        return

    user_products[user_id] = products

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞", callback_data="search")],
            [InlineKeyboardButton(text="üîçüìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ", callback_data="show_all")]
        ]
    )

    await message.answer("üì¶ –í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã:", reply_markup=keyboard)


@router.callback_query(lambda call: call.data == "show_all")
async def show_all_products(call: CallbackQuery):
    user_id = call.from_user.id
    products = user_products.get(user_id,[])
    user_page[user_id] = 0

    if not products:
        await call.message.answer("‚ùå –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç.")
        await call.answer()
        return


    print(f"üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º {len(products)} —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {user_page[user_id]}")

    keyboard = generate_products_keyboard(products, user_page[user_id])
    print(f"DEBUG: keyboard = {keyboard}")
    await call.message.edit_text("üì¶ –í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ 1):", reply_markup=keyboard)
    await call.answer()